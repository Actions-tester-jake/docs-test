{
    "properties": {
      "admin": {
        "description": "Address and port of admin server",
        "nullable": false,
        "needs_restart": true,
        "visibility": "user",
        "is_secret": false,
        "type": "array",
        "items": {
          "type": "broker_endpoint"
        }
      },
      "admin_api_doc_dir": {
        "description": "Admin API doc directory",
        "nullable": false,
        "needs_restart": true,
        "visibility": "user",
        "is_secret": false,
        "type": "string"
      },
      "admin_api_tls": {
        "description": "TLS configuration for admin HTTP server",
        "nullable": false,
        "needs_restart": true,
        "visibility": "user",
        "is_secret": false,
        "type": "array",
        "items": {
          "type": "endpoint_tls_config"
        }
      },
      "advertised_kafka_api": {
        "description": "Address of Kafka API published to the clients",
        "nullable": false,
        "needs_restart": true,
        "visibility": "user",
        "is_secret": false,
        "type": "array",
        "items": {
          "type": "broker_endpoint"
        }
      },
      "advertised_rpc_api": {
        "description": "Address of RPC endpoint published to other cluster members",
        "nullable": true,
        "needs_restart": true,
        "visibility": "user",
        "is_secret": false,
        "type": "net::unresolved_address"
      },
      "cloud_storage_cache_directory": {
        "description": "Directory for archival cache. Should be present when `cloud_storage_enabled` is present",
        "nullable": true,
        "needs_restart": true,
        "visibility": "user",
        "is_secret": false,
        "type": "string"
      },
      "crash_loop_limit": {
        "description": "Maximum consecutive crashes (unclean shutdowns) allowed after which operator intervention is needed to startup the broker.",
        "nullable": true,
        "needs_restart": true,
        "visibility": "user",
        "is_secret": false,
        "type": "integer"
      },
      "data_directory": {
        "description": "Place where redpanda will keep the data",
        "nullable": false,
        "needs_restart": true,
        "visibility": "user",
        "is_secret": false,
        "type": "string"
      },
      "developer_mode": {
        "description": "Skips most of the checks performed at startup, not recomended for production use",
        "nullable": false,
        "needs_restart": true,
        "visibility": "tunable",
        "is_secret": false,
        "example": "true",
        "type": "boolean"
      },
      "empty_seed_starts_cluster": {
        "description": "If true, an empty seed_servers list will denote that this node should form a cluster. At most one node in the cluster should be configured configured with an empty seed_servers list. If no such configured node exists, or if configured to false, all nodes denoted by the seed_servers list must be identical among those nodes' configurations, and those nodes will form the initial cluster.",
        "nullable": false,
        "needs_restart": true,
        "visibility": "user",
        "is_secret": false,
        "example": "false",
        "type": "boolean"
      },
      "kafka_api": {
        "description": "Address and port of an interface to listen for Kafka API requests",
        "nullable": false,
        "needs_restart": true,
        "visibility": "user",
        "is_secret": false,
        "type": "array",
        "items": {
          "type": "config::broker_auth_endpoint"
        }
      },
      "kafka_api_tls": {
        "description": "TLS configuration for Kafka API endpoint",
        "nullable": false,
        "needs_restart": true,
        "visibility": "user",
        "is_secret": false,
        "type": "array",
        "items": {
          "type": "endpoint_tls_config"
        }
      },
      "memory_allocation_warning_threshold": {
        "description": "Enables log messages for allocations greater than the given size.",
        "nullable": true,
        "needs_restart": true,
        "visibility": "tunable",
        "is_secret": false,
        "type": "integer"
      },
      "node_id": {
        "description": "Unique id identifying a node in the cluster. If missing, a unique id will be assigned for this node when it joins the cluster",
        "nullable": true,
        "needs_restart": true,
        "visibility": "user",
        "is_secret": false,
        "type": "integer"
      },
      "rack": {
        "description": "Rack identifier",
        "nullable": true,
        "needs_restart": true,
        "visibility": "user",
        "is_secret": false,
        "type": "rack_id"
      },
      "rpc_server": {
        "description": "IpAddress and port for RPC server",
        "nullable": false,
        "needs_restart": true,
        "visibility": "user",
        "is_secret": false,
        "type": "net::unresolved_address"
      },
      "rpc_server_tls": {
        "description": "TLS configuration for RPC server",
        "nullable": false,
        "needs_restart": true,
        "visibility": "user",
        "is_secret": false,
        "type": "tls_config"
      },
      "seed_servers": {
        "description": "List of the seed servers used to join current cluster. If the seed_server list is empty the node will be a cluster root and it will form a new cluster",
        "nullable": false,
        "needs_restart": true,
        "visibility": "user",
        "is_secret": false,
        "type": "array",
        "items": {
          "type": "seed_server"
        }
      },
      "storage_failure_injection_config_path": {
        "description": "Path to the configuration file used for low level storage failure injection",
        "nullable": true,
        "needs_restart": true,
        "visibility": "tunable",
        "is_secret": false,
        "type": "string"
      },
      "storage_failure_injection_enabled": {
        "description": "If true, inject low level storage failures on the write path. **Not** for production usage.",
        "nullable": false,
        "needs_restart": true,
        "visibility": "tunable",
        "is_secret": false,
        "example": "true",
        "type": "boolean"
      },
      "upgrade_override_checks": {
        "description": "Whether to violate safety checks when starting a redpanda version newer than the cluster's consensus version",
        "nullable": false,
        "needs_restart": true,
        "visibility": "tunable",
        "is_secret": false,
        "example": "true",
        "type": "boolean"
      }
    }
  }